
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author eren5
 */
public class Ana_Ekran extends javax.swing.JFrame {

    /**
     * Creates new form Ana_Ekran
     */
    public Ana_Ekran() {
        initComponents();
    }
    
    String h_sql ; 
    public Ana_Ekran(String sql) {
        initComponents();
        h_sql = sql ;
       
        tarih();
        isim(sql);
        aktifrandevu();
        iptalrandevu();
        
        
        txt_hb_cinsiyet.setEnabled(false);
        Toolkit toolkit=getToolkit();
        Dimension size=toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        
    }
    
    
    
    
    
    
    
      Connection conn = null ; PreparedStatement pst = null ; ResultSet rs = null ;
    
      
      public void yas(int buyıl , int dogumyıl){
          
          int hesap = buyıl-dogumyıl ;
          System.out.println(hesap);
          
          if (hesap<53) {
              JOptionPane.showMessageDialog(null, "55 yaşından küçük olduğunuz için aşı hakkınız bulunmamaktadır");
          }
          
          else {
           new Ası_Randevu(h_sql).setVisible(true);
           this.hide();
          }
          
      }
      
      
     int gun ; 
     int ay ; 
     int yıl ; 
     String tarih  ;  
       
     public void tarih(){
        
    SimpleDateFormat dateFormat=new SimpleDateFormat("dd/MM/yyyy");
    
    Date guntarih= new Date();
    
    String deger = dateFormat.format(guntarih);
   
    
    String[] bol = deger.split("/");
    int[] cevir = new int[bol.length] ; 
        
        for (int i = 0; i < bol.length; i++) {
       
            cevir[i] = Integer.valueOf(bol[i]);
       
        }
        
            gun = cevir[0]; 
            ay = cevir[1];
            yıl = cevir[2];
            
            
       tarih = deger;

    }
      
      
       int dogumyıl ; 
       int h_id ;
     public void isim(String sql){

         try{
             conn = db.connect_db(); 
            // String sql  = "SELECT * FROM HASTA WHERE HASTA_ID = '" + a + "'" ;
             pst = conn.prepareStatement(sql);
             rs = pst.executeQuery() ; 
             System.out.println(sql);

             while(rs.next()){
                 h_id = Integer.parseInt(rs.getString("HASTA_ID"));
                 txt_adsoyad.setText(rs.getString("HASTA_AD")  + " " + rs.getString("HASTA_SOYAD"));
              // lbl_hasta_ad.setEnabled(false);
                 txt_hb_ad.setText(rs.getString("HASTA_AD"));
                 txt_hb_soyad.setText(rs.getString("HASTA_SOYAD"));
                 txt_hb_telefon.setText(rs.getString("TELEFON"));
                 txt_hb_tc.setText(rs.getString("TC"));
                 txt_hb_dogumtarihi.setText(rs.getString("HASTA_DOGUMTARIHI"));
                 txt_hb_email.setText(rs.getString("E_MAIL"));
                 txt_hb_cinsiyet.setText(rs.getString("CINSIYET"));
                 txt_sifre.setText(rs.getString("PAROLA"));
                 
                 String [] bol =txt_hb_dogumtarihi.getText().split("/") ; 
                 dogumyıl = Integer.valueOf(bol[2]);// doğum yılını int değer olarak aldık 
                 
                 
             }

         }catch (Exception ex) {
             JOptionPane.showMessageDialog(null,ex);
         }finally{
             try{
                 conn.close();
             }catch (Exception ex) {

             }
         }


     }
      
      
//       void kilitle(){
//         txt_hb_ad.setEnabled(false);
//              txt_hb_soyad.setEnabled(false);
//              txt_hb_telefon.setEnabled(false);
//              txt_hb_tc.setEnabled(false);
//              txt_hb_dogumtarihi.setEnabled(false);
//              txt_hb_email.setEnabled(false);
//              txt_hb_cinsiyet.setEnabled(false);
//    }
      
       
       
       
         int aktifsutun=0;
    
    void aktifrandevu (){
    try{

            DefaultTableModel tbl = (DefaultTableModel) tbl_aktifrandevu.getModel();

            while (tbl.getRowCount() > 0) {
                // eğer ki tabloda 1 satır bile veri varsa sorgusu yaptık
                tbl.removeRow(0);  // tüm satırları sil dedik 
            }

            //veritabanı işlemleri 

            conn = db.connect_db();
            String sql = "SELECT * FROM RANDEVU_ISLEM WHERE HASTA_ID = '" + h_id +  "'" ; 
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            ResultSetMetaData rsmd = rs.getMetaData(); // sütün sayısını alma işlemi 
            aktifsutun = rsmd.getColumnCount(); // sütun sayısı alındı 
            String[] data = new String[aktifsutun]; // sütun boyutunda bir String boyut oluşturduk

            while(rs.next()){

                for (int i = 0; i < data.length; i++) {
                  data[i] = rs.getString(i+1);


              }

                 DefaultTableModel tblModel = (DefaultTableModel) tbl_aktifrandevu.getModel(); 
                 tblModel.addRow(data); // verileri ekledik 

            }

        }catch (Exception ex) {

        }finally{
            try{
                conn.close();
            }catch (Exception ex) {

            }
        }


    }
    
    
    int  asısutun  ;
    void gecmisası(){
        System.out.println(h_id);
        try{

            DefaultTableModel tbl = (DefaultTableModel) tbl_gecmisası.getModel();

            while (tbl.getRowCount() > 0) {
                // eğer ki tabloda 1 satır bile veri varsa sorgusu yaptık
                tbl.removeRow(0);  // tüm satırları sil dedik 
            }

            //veritabanı işlemleri 

            conn = db.connect_db();
            String sql = "SELECT * FROM ASI_GECMİS WHERE HASTA_ID = '" + h_id +  "'" ; 
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            

            ResultSetMetaData rsmd = rs.getMetaData(); // sütün sayısını alma işlemi 
            asısutun = rsmd.getColumnCount(); // sütun sayısı alındı 
            String[] data = new String[asısutun]; // sütun boyutunda bir String boyut oluşturduk

            while(rs.next()){

                
                
                
                for (int i = 0; i < data.length; i++) {
                  data[i] = rs.getString(i+1);


              }

                 DefaultTableModel tblModel = (DefaultTableModel) tbl_gecmisası.getModel(); 
                 tblModel.addRow(data); // verileri ekledik 

            }

        }catch (Exception ex) {
           JOptionPane.showMessageDialog(null, ex);
        }finally{
            try{
                conn.close();
            }catch (Exception ex) {

            }
        }
        
        
    }
    
    
      void aktifası(){
        System.out.println(h_id);
        try{

            DefaultTableModel tbl = (DefaultTableModel) tbl_aktifası.getModel();

            while (tbl.getRowCount() > 0) {
                // eğer ki tabloda 1 satır bile veri varsa sorgusu yaptık
                tbl.removeRow(0);  // tüm satırları sil dedik 
            }

            //veritabanı işlemleri 

            conn = db.connect_db();
            String sql = "SELECT * FROM ASI_ISLEM WHERE HASTA_ID = '" + h_id +  "'" ; 
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            

            ResultSetMetaData rsmd = rs.getMetaData(); // sütün sayısını alma işlemi 
            asısutun = rsmd.getColumnCount(); // sütun sayısı alındı 
            String[] data = new String[asısutun]; // sütun boyutunda bir String boyut oluşturduk

            while(rs.next()){

                
                
                
                for (int i = 0; i < data.length; i++) {
                  data[i] = rs.getString(i+1);


              }

                 DefaultTableModel tblModel = (DefaultTableModel) tbl_aktifası.getModel(); 
                 tblModel.addRow(data); // verileri ekledik 

            }

        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }finally{
            try{
                conn.close();
            }catch (Exception ex) {

            }
        }
        
        
    }
    
    
    
    
      void aktif(){
        int a =0 ;
        int ınsert = 0 ; 
        
        try{
            System.out.println("1.");
            conn = db.connect_db() ; 
            String sql = "SELECT * FROM ASI_ISLEM" ;
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery() ; 
            while(rs.next()){
                a++ ; 
            }
        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex +".");
        }finally{
            try{
                conn.close();
            }catch (Exception ex) {
                
            }
        }
        
        String[] il = new String[a] ;
        String[] idd = new String[a] ;
        String[] ilce = new String[a] ;
        String[] hastane = new String[a] ;
        String[] r_tarih = new String[a] ;
        String[] hasta_idd = new String[a] ;
        String[] r_saatt = new String[a] ;
        boolean [] dogrulama = new boolean[a];
        
         try{
             System.out.println("2.");
            conn = db.connect_db() ; 
            String sql = "SELECT * FROM ASI_ISLEM " ;
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery() ; 
     
            int i = 0 ;
            while(rs.next()){
                 SimpleDateFormat dateFormat=new SimpleDateFormat("dd/MM/yyyy");
                 Date now= new Date();
               
                   
                    dogrulama[i] = false ;
                    idd[i] = rs.getString("ASI_ID");
                    il[i] = rs.getString("ASI_IL");
                    ilce[i] = rs.getString("ASI_ILCE");
                    hastane[i] = rs.getString("HASTANE_AD");
                    r_tarih[i] = rs.getString("ASI_TARIH");
                    hasta_idd[i] = rs.getString("HASTA_ID");
                    r_saatt[i] = rs.getString("ASI_SAAT");  
                   
                    Date date = dateFormat.parse(r_tarih[i]);
            
                    
                    if (now.getTime()> date.getTime()) {
                        dogrulama[i] = true ; 
                        System.out.println("i değeri : " + i);
                    }
                    
                     i++;  
                    
            }
        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex +".");
        }finally{
            try{
                conn.close();
            }catch (Exception ex) {
                
            }
        }
         
         
        
        for (int i = 0; i < a; i++) {
            if (dogrulama[i] == true) {
                
                  try{
                      System.out.println("a : " + i );
                conn=db.connect_db();
                String sql = "INSERT INTO ASI_GECMİS (ASI_IL,ASI_ILCE,HASTANE_AD,ASI_TARIH,HASTA_ID,ASI_SAAT) VALUES (?,?,?,?,?,?)" ;
                pst = conn.prepareStatement(sql);
                pst.setString(1, il[i]);
                pst.setString(2, ilce[i]);
                pst.setString(3, hastane[i]);
                pst.setString(4, r_tarih[i]);
                pst.setString(5, hasta_idd[i]);
                pst.setString(6, r_saatt[i]);
                pst.execute();
                gecmisası();
            }
            catch (Exception ex) {
                   JOptionPane.showMessageDialog(null,ex );
            }
            finally{
                try{
                    conn.close();
                }catch (Exception ex) {

                }
            }
                
             }
            
            else{
                continue ; 
            }
            
        }
        
        for (int i = 0; i < a; i++) {
            
            if (dogrulama[i] == true) {
                
                  try{
                conn=db.connect_db();
                String sql = "DELETE FROM ASI_ISLEM WHERE ASI_ID=?" ;
                pst = conn.prepareStatement(sql);
                pst.setString(1, idd[i]);
                pst.execute();
                aktifası(); 
              
            }
            catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex );
            }
            finally{
                try{
                    conn.close();
                }
                catch (Exception ex) {

                }
            }
                
            }
            
        }
        
        
        
       
        
    }
    
    
    
    
      
      void favorirandevu(){
 
         try{

            DefaultTableModel tbl = (DefaultTableModel) tbl_favorirandevu.getModel();

            while (tbl.getRowCount() > 0) {
                // eğer ki tabloda 1 satır bile veri varsa sorgusu yaptık
                tbl.removeRow(0);  // tüm satırları sil dedik 
            }

            //veritabanı işlemleri 

            conn = db.connect_db();
            String sql = "SELECT * FROM FAVORI WHERE HASTA_ID = '" + h_id +  "'" ; 
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            ResultSetMetaData rsmd = rs.getMetaData(); // sütün sayısını alma işlemi 
            aktifsutun = rsmd.getColumnCount(); // sütun sayısı alındı 
            String[] data = new String[aktifsutun]; // sütun boyutunda bir String boyut oluşturduk

            while(rs.next()){

                for (int i = 0; i < data.length; i++) {
                  data[i] = rs.getString(i+1);


              }
                 DefaultTableModel tblModel = (DefaultTableModel) tbl_favorirandevu.getModel(); 
                 tblModel.addRow(data); // verileri ekledik 
            }

        }catch (Exception ex) {

        }finally{
            try{
                conn.close();
            }catch (Exception ex) {

            }
        }
      }
    
    
    
    
    
    
    
    
    void gecmisrandevu(){
        System.out.println(h_id);
        try{

            DefaultTableModel tbl = (DefaultTableModel) tbl_gecmisrandevu.getModel();

            while (tbl.getRowCount() > 0) {
                // eğer ki tabloda 1 satır bile veri varsa sorgusu yaptık
                tbl.removeRow(0);  // tüm satırları sil dedik 
            }

            //veritabanı işlemleri 

            conn = db.connect_db();
            String sql = "SELECT * FROM GECMİS_RANDEVU WHERE HASTA_ID = '" + h_id +  "'" ; 
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            

            ResultSetMetaData rsmd = rs.getMetaData(); // sütün sayısını alma işlemi 
            aktifsutun = rsmd.getColumnCount(); // sütun sayısı alındı 
            String[] data = new String[aktifsutun]; // sütun boyutunda bir String boyut oluşturduk

            while(rs.next()){

                
                
                
                for (int i = 0; i < data.length; i++) {
                  data[i] = rs.getString(i+1);


              }

                 DefaultTableModel tblModel = (DefaultTableModel) tbl_gecmisrandevu.getModel(); 
                 tblModel.addRow(data); // verileri ekledik 

            }

        }catch (Exception ex) {

        }finally{
            try{
                conn.close();
            }catch (Exception ex) {

            }
        }
        
        
    }
     
     
     
     
    void gecmis(){
        int a =0 ;
        int ınsert = 0 ; 
        System.out.println("yazııı");
        
        try{
            System.out.println("1.");
            conn = db.connect_db() ; 
            String sql = "SELECT * FROM RANDEVU_ISLEM" ;
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery() ; 
            while(rs.next()){
                a++ ; 
            }
        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex +".");
        }finally{
            try{
                conn.close();
            }catch (Exception ex) {
                
            }
        }
        
        String[] il = new String[a] ;
        String[] idd = new String[a] ;
        String[] ilce = new String[a] ;
        String[] hastane = new String[a] ;
        String[] poliklinik = new String[a] ;
        String[] r_tarih = new String[a] ;
        String[] doktor_idd = new String[a] ;
        String[] hasta_idd = new String[a] ;
        String[] r_saatt = new String[a] ;
        boolean [] dogrulama = new boolean[a];
        
         try{
             System.out.println("2.");
            conn = db.connect_db() ; 
            String sql = "SELECT * FROM RANDEVU_ISLEM " ;
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery() ; 
     
            int i = 0 ;
            while(rs.next()){
                 SimpleDateFormat dateFormat=new SimpleDateFormat("dd/MM/yyyy");
                 Date now= new Date();
               
                   
                    dogrulama[i] = false ;
                    idd[i] = rs.getString("RANDEVU_ID");
                    il[i] = rs.getString("RANDEVU_IL");
                    ilce[i] = rs.getString("RANDEVU_ILCE");
                    hastane[i] = rs.getString("HASTANE_AD");
                    poliklinik[i] = rs.getString("RANDEVU_POLIKLINIK");
                    r_tarih[i] = rs.getString("RANDEVU_TARIH");
                    doktor_idd[i] = rs.getString("DOKTOR_ID");
                    hasta_idd[i] = rs.getString("HASTA_ID");
                    r_saatt[i] = rs.getString("RANDEVU_SAAT");  
                   
                    Date date = dateFormat.parse(r_tarih[i]);
            
                    
                    if (now.getTime()> date.getTime()) {
                        dogrulama[i] = true ; 
                        System.out.println("i değeri : " + i);
                    }
                    
                     i++;  
                    
            }
        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex +".");
        }finally{
            try{
                conn.close();
            }catch (Exception ex) {
                
            }
        }
         
         
        
        for (int i = 0; i < a; i++) {
            if (dogrulama[i] == true) {
                
                  try{
                      System.out.println("a : " + i );
                conn=db.connect_db();
                String sql = "INSERT INTO GECMİS_RANDEVU (GECMİS_IL,GECMİS_ILCE,HASTANE_AD,GECMİS_POLIKLINIK,GECMİS_TARIH,DOKTOR_ID,HASTA_ID,GECMİS_SAAT) VALUES (?,?,?,?,?,?,?,?)" ;
                pst = conn.prepareStatement(sql);
                pst.setString(1, il[i]);
                pst.setString(2, ilce[i]);
                pst.setString(3, hastane[i]);
                pst.setString(4, poliklinik[i]);
                pst.setString(5, r_tarih[i]);
                pst.setString(6, doktor_idd[i]);
                pst.setString(7, hasta_idd[i]);
                pst.setString(8, r_saatt[i]);
                pst.execute();
                gecmisrandevu();
            }
            catch (Exception ex) {
                   JOptionPane.showMessageDialog(null,ex );
            }
            finally{
                try{
                    conn.close();
                }catch (Exception ex) {

                }
            }
                
             }
            
            else{
                continue ; 
            }
            
        }
        
        for (int i = 0; i < a; i++) {
            
            if (dogrulama[i] == true) {
                
                  try{
                conn=db.connect_db();
                String sql = "DELETE FROM RANDEVU_ISLEM WHERE RANDEVU_ID=?" ;
                pst = conn.prepareStatement(sql);
                pst.setString(1, idd[i]);
                pst.execute();
                aktifrandevu();
              
            }
            catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex );
            }
            finally{
                try{
                    conn.close();
                }
                catch (Exception ex) {

                }
            }
                
            }
            
        }
        
        
        
       
        
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    void iptalrandevu(){

        try{

            DefaultTableModel tbl = (DefaultTableModel) tbl_iptalrandevu.getModel();

            while (tbl.getRowCount() > 0) {
                // eğer ki tabloda 1 satır bile veri varsa sorgusu yaptık
                tbl.removeRow(0);  // tüm satırları sil dedik 
            }

            //veritabanı işlemleri 

            conn = db.connect_db();
            String sql = "SELECT * FROM IPTAL_RANDEVU WHERE HASTA_ID = '" + h_id +  "'" ; 
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            ResultSetMetaData rsmd = rs.getMetaData(); // sütün sayısını alma işlemi 
            aktifsutun = rsmd.getColumnCount(); // sütun sayısı alındı 
            String[] data = new String[aktifsutun]; // sütun boyutunda bir String boyut oluşturduk




            while(rs.next()){

                 for (int i = 0; i < data.length; i++) {
                  data[i] = rs.getString(i+1);

              }

                 DefaultTableModel tblModel = (DefaultTableModel) tbl_iptalrandevu.getModel(); 
                 tblModel.addRow(data); // verileri ekledik 
            }

        }catch (Exception ex) {

        }finally{
            try{
                conn.close();
            }catch (Exception ex) {

            }
        }

    }
      
      
      
      
      
      
      
      
      
      
      
      
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel11 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btn_randevuu = new javax.swing.JButton();
        btn_tema = new javax.swing.JButton();
        btn_hesap = new javax.swing.JButton();
        btn_ana = new javax.swing.JButton();
        btn_cıkıs = new javax.swing.JButton();
        txt_adsoyad = new javax.swing.JTextField();
        tp = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        btn_randevu = new javax.swing.JButton();
        btn_ası = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_hb_telefon = new javax.swing.JTextField();
        txt_hb_dogumtarihi = new javax.swing.JTextField();
        txt_hb_cinsiyet = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_hb_tc = new javax.swing.JTextField();
        btn_guncelle = new javax.swing.JButton();
        txt_hb_soyad = new javax.swing.JTextField();
        txt_hb_email = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_hb_ad = new javax.swing.JTextField();
        btn_sil = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_sifre = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_favorirandevu = new javax.swing.JTable();
        btn_favorikaldır = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_aktifrandevu = new javax.swing.JTable();
        btn_iptal = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_iptalrandevu = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_gecmisrandevu = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_aktifası = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_gecmisası = new javax.swing.JTable();
        btn_favoriler = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_randevuu.setBackground(new java.awt.Color(204, 204, 204));
        btn_randevuu.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btn_randevuu.setForeground(new java.awt.Color(0, 0, 0));
        btn_randevuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/appointment_2.png"))); // NOI18N
        btn_randevuu.setText("Randevu Bilgileri");
        btn_randevuu.setBorder(null);
        btn_randevuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_randevuuActionPerformed(evt);
            }
        });
        jPanel2.add(btn_randevuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(1015, 14, 194, 55));

        btn_tema.setBackground(new java.awt.Color(204, 204, 204));
        btn_tema.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btn_tema.setForeground(new java.awt.Color(0, 0, 0));
        btn_tema.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/paint-brush.png"))); // NOI18N
        btn_tema.setText("Tema");
        btn_tema.setBorder(null);
        btn_tema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_temaActionPerformed(evt);
            }
        });
        jPanel2.add(btn_tema, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 14, 194, 55));

        btn_hesap.setBackground(new java.awt.Color(204, 204, 204));
        btn_hesap.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btn_hesap.setForeground(new java.awt.Color(0, 0, 0));
        btn_hesap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/user.png"))); // NOI18N
        btn_hesap.setText("Hesap Bilgileri");
        btn_hesap.setBorder(null);
        btn_hesap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hesapActionPerformed(evt);
            }
        });
        jPanel2.add(btn_hesap, new org.netbeans.lib.awtextra.AbsoluteConstraints(283, 14, 194, 55));

        btn_ana.setBackground(new java.awt.Color(204, 204, 204));
        btn_ana.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btn_ana.setForeground(new java.awt.Color(0, 0, 0));
        btn_ana.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/home.png"))); // NOI18N
        btn_ana.setText("Ana Sayfa");
        btn_ana.setBorder(null);
        btn_ana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_anaActionPerformed(evt);
            }
        });
        jPanel2.add(btn_ana, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 14, 194, 55));

        btn_cıkıs.setBackground(new java.awt.Color(204, 204, 204));
        btn_cıkıs.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        btn_cıkıs.setForeground(new java.awt.Color(51, 204, 255));
        btn_cıkıs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/exit.png"))); // NOI18N
        btn_cıkıs.setText("Çıkış");
        btn_cıkıs.setBorder(null);
        btn_cıkıs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cıkısActionPerformed(evt);
            }
        });
        jPanel2.add(btn_cıkıs, new org.netbeans.lib.awtextra.AbsoluteConstraints(1479, 12, 130, 54));

        txt_adsoyad.setBackground(new java.awt.Color(0, 153, 153));
        txt_adsoyad.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_adsoyad.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txt_adsoyad, new org.netbeans.lib.awtextra.AbsoluteConstraints(1259, 20, 170, 40));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        btn_randevu.setBackground(new java.awt.Color(0, 153, 153));
        btn_randevu.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btn_randevu.setForeground(new java.awt.Color(0, 0, 0));
        btn_randevu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/medical-appointment_1.png"))); // NOI18N
        btn_randevu.setText("HASTANE RANDEVUSU AL");
        btn_randevu.setBorder(null);
        btn_randevu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_randevubtn_randevuActionPerformed(evt);
            }
        });

        btn_ası.setBackground(new java.awt.Color(0, 153, 153));
        btn_ası.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btn_ası.setForeground(new java.awt.Color(0, 0, 0));
        btn_ası.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/syringe_2.png"))); // NOI18N
        btn_ası.setText("AŞI RANDEVUSU AL");
        btn_ası.setBorder(null);
        btn_ası.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_asıbtn_asıActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(btn_ası, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 401, Short.MAX_VALUE)
                .addComponent(btn_randevu, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(389, 389, 389))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ası, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_randevu, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(558, Short.MAX_VALUE))
        );

        tp.addTab("tab1", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Soyad : ");

        txt_hb_telefon.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_hb_telefon.setForeground(new java.awt.Color(0, 0, 0));
        txt_hb_telefon.setText(" ");

        txt_hb_dogumtarihi.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_hb_dogumtarihi.setForeground(new java.awt.Color(0, 0, 0));

        txt_hb_cinsiyet.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_hb_cinsiyet.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Ad : ");

        txt_hb_tc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_hb_tc.setForeground(new java.awt.Color(0, 0, 0));

        btn_guncelle.setForeground(new java.awt.Color(0, 0, 0));
        btn_guncelle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/arrows.png"))); // NOI18N
        btn_guncelle.setText("Güncelle");
        btn_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guncelleActionPerformed(evt);
            }
        });

        txt_hb_soyad.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_hb_soyad.setForeground(new java.awt.Color(0, 0, 0));
        txt_hb_soyad.setText(" ");

        txt_hb_email.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_hb_email.setForeground(new java.awt.Color(0, 0, 0));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("E_MAİL :");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Telefon : ");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Doğum Tarihi : ");

        txt_hb_ad.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_hb_ad.setForeground(new java.awt.Color(0, 0, 0));

        btn_sil.setForeground(new java.awt.Color(0, 0, 0));
        btn_sil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/trash.png"))); // NOI18N
        btn_sil.setText("Sil");
        btn_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_silActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Cinsiyet : ");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("TC : ");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Şifre :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(416, 416, 416)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_hb_telefon)
                            .addComponent(txt_hb_tc, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(873, 873, 873))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_hb_email)
                                    .addComponent(txt_hb_dogumtarihi)
                                    .addComponent(txt_hb_cinsiyet)
                                    .addComponent(txt_sifre, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(btn_guncelle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                                .addComponent(btn_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(866, 866, 866))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(483, 483, 483)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_hb_ad, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_hb_soyad, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_hb_ad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_hb_soyad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_hb_telefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_hb_tc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_hb_dogumtarihi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_hb_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_hb_cinsiyet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_sifre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_guncelle)
                    .addComponent(btn_sil))
                .addContainerGap(308, Short.MAX_VALUE))
        );

        tp.addTab("tab2", jPanel4);

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FAVORİLER", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18), new java.awt.Color(0, 0, 0))); // NOI18N

        tbl_favorirandevu.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tbl_favorirandevu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DOKTOR AD ", "DOKTOR SOYAD", "POLİKLİNİK"
            }
        ));
        tbl_favorirandevu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_favorirandevuMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_favorirandevu);

        btn_favorikaldır.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/remove-user.png"))); // NOI18N
        btn_favorikaldır.setText("FAVORİLERDEN KALDIR ");
        btn_favorikaldır.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_favorikaldırActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(497, 497, 497)
                .addComponent(btn_favorikaldır)
                .addContainerGap(561, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addComponent(btn_favorikaldır)
                .addGap(0, 138, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(306, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(178, Short.MAX_VALUE))
        );

        tp.addTab("tab5", jPanel7);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Karanlık Tema ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Aydınlık Tema ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 153));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton3.setText("Klasik Tema ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(618, 618, 618)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(1073, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jButton1)
                .addGap(55, 55, 55)
                .addComponent(jButton2)
                .addGap(56, 56, 56)
                .addComponent(jButton3)
                .addContainerGap(448, Short.MAX_VALUE))
        );

        tp.addTab("tab3", jPanel5);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));

        tbl_aktifrandevu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Randevu ID", "İL", "İLÇE", "HASTANE", "POLİKLİNİK", "RANDEVU TARİHİ", "DOKTOR ID", "HASTA ID", "RANDEVU SAATİ"
            }
        ));
        tbl_aktifrandevu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_aktifrandevuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_aktifrandevu);

        btn_iptal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/prohibition.png"))); // NOI18N
        btn_iptal.setText("RANDEVUYU İPTAL ET");
        btn_iptal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_iptalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(383, 383, 383)
                .addComponent(btn_iptal, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addGap(29, 29, 29)
                .addComponent(btn_iptal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jTabbedPane2.addTab("Aktif Randevu", jPanel9);

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));

        tbl_iptalrandevu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Randevu ID", "İL", "İLÇE", "HASTANE", "POLİKLİNİK", "RANDEVU TARİHİ", "DOKTOR ID", "HASTA ID", "RANDEVU SAATİ"
            }
        ));
        tbl_iptalrandevu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_iptalrandevuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_iptalrandevu);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 288, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("İptal Edilen Randevu", jPanel10);

        tbl_gecmisrandevu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Randevu ID", "İL", "İLÇE", "HASTANE", "POLİKLİNİK", "RANDEVU TARİHİ", "DOKTOR ID", "HASTA ID", "RANDEVU SAATİ"
            }
        ));
        tbl_gecmisrandevu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_gecmisrandevuMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_gecmisrandevu);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 115, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Geçmiş Randevularım", jPanel12);

        tbl_aktifası.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ASI_ID", "İL", "İLÇE", "HASTANE", "RANDEVU TARİHİ", "HASTA ID", "ASI SAATİ"
            }
        ));
        tbl_aktifası.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_aktifasıMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbl_aktifası);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 115, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Aktif Aşı  Randevusu", jPanel8);

        tbl_gecmisası.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AŞI_ID", "İL", "İLÇE", "HASTANE", "RANDEVU TARİHİ", "HASTA ID", "AŞI SAATİ"
            }
        ));
        tbl_gecmisası.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_gecmisasıMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_gecmisası);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 115, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Geçmiş Aşı Randevusu", jPanel14);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(308, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(485, 485, 485))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(281, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        tp.addTab("tab4", jPanel6);

        jPanel2.add(tp, new org.netbeans.lib.awtextra.AbsoluteConstraints(-220, 50, 1860, 910));

        btn_favoriler.setBackground(new java.awt.Color(204, 204, 204));
        btn_favoriler.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_favoriler.setForeground(new java.awt.Color(0, 0, 0));
        btn_favoriler.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/star.png"))); // NOI18N
        btn_favoriler.setText("Favoriler");
        btn_favoriler.setBorder(null);
        btn_favoriler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_favorilerActionPerformed(evt);
            }
        });
        jPanel2.add(btn_favoriler, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 14, 194, 55));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void btn_randevuuActionPerformed(java.awt.event.ActionEvent evt) {                                             
        gecmis();
        gecmisrandevu();
        aktif();
        gecmisası();
        aktifası();
         
        tp.setSelectedIndex(4);
        //        aktifrandevu();
    }                                            

    private void btn_hesapActionPerformed(java.awt.event.ActionEvent evt) {                                          
        tp.setSelectedIndex(1);
    }                                         

    private void btn_anaActionPerformed(java.awt.event.ActionEvent evt) {                                        

        
        tp.setSelectedIndex(0);
    }                                       

    private void btn_temaActionPerformed(java.awt.event.ActionEvent evt) {                                         
        tp.setSelectedIndex(3);
    }                                        

    private void btn_cıkısActionPerformed(java.awt.event.ActionEvent evt) {                                          

        new HRS().setVisible(true);
        this.hide();
        
    }                                         

    String randevu_id;
    String hasta_il;
    String hasta_ilce;
    String hasta_hastane;
    String hasta_poliklinik;
    String hasta_tarih;
    String hasta_doktorid;
    String hasta_id;
    String hasta_saat;
    
    
//    
//    void favorirandevu(){
//        
//         try{
//
//            DefaultTableModel tbl = (DefaultTableModel) tbl_favorirandevu.getModel();
//
//            while (tbl.getRowCount() > 0) {
//                // eğer ki tabloda 1 satır bile veri varsa sorgusu yaptık
//                tbl.removeRow(0);  // tüm satırları sil dedik 
//            }
//
//            //veritabanı işlemleri 
//
//            conn = db.connect_db();
//            String sql = "SELECT * FROM FAVORI WHERE HASTA_ID = '" + h_id +  "'" ; 
//            pst = conn.prepareStatement(sql);
//            rs = pst.executeQuery();
//
//            ResultSetMetaData rsmd = rs.getMetaData(); // sütün sayısını alma işlemi 
//            aktifsutun = rsmd.getColumnCount(); // sütun sayısı alındı 
//            String[] data = new String[aktifsutun]; // sütun boyutunda bir String boyut oluşturduk
//
//            while(rs.next()){
//
//                for (int i = 0; i < data.length; i++) {
//                  data[i] = rs.getString(i+1);
//
//
//              }
//
//                 DefaultTableModel tblModel = (DefaultTableModel) tbl_favorirandevu.getModel(); 
//                 tblModel.addRow(data); // verileri ekledik 
//
//            }
//
//        }catch (Exception ex) {
//
//        }finally{
//            try{
//                conn.close();
//            }catch (Exception ex) {
//
//            }
//        }
//        
//        
//    }
//    
    
    
    
    
    
    void tema (int a,int b, int c,int d,int e, int f) {
         jPanel3.setBackground(new java.awt.Color(a, b, c));
         jPanel2.setBackground(new java.awt.Color(a, b, c));
          jPanel4.setBackground(new java.awt.Color(a, b, c));
          jPanel6.setBackground(new java.awt.Color(a, b, c));
          jPanel7.setBackground(new java.awt.Color(a, b, c));
          jPanel5.setBackground(new java.awt.Color(a, b, c));
          jPanel12.setBackground(new java.awt.Color(a, b, c));
          btn_ana.setBackground(new java.awt.Color(d, e, f));
          btn_hesap.setBackground(new java.awt.Color(d, e, f));
          btn_tema.setBackground(new java.awt.Color(d, e, f));
          btn_favoriler.setBackground(new java.awt.Color(d, e, f));
          btn_randevuu.setBackground(new java.awt.Color(d, e, f));
          btn_sil.setBackground(new java.awt.Color(d, e, f));
          btn_guncelle.setBackground(new java.awt.Color(d, e, f));
      
          
          



          btn_cıkıs.setBackground(new java.awt.Color(d, e, f));


    }
    
    
            
    
    private void btn_randevubtn_randevuActionPerformed(java.awt.event.ActionEvent evt) {                                                       

        new Hasta_Giris(h_sql).setVisible(true);
        this.hide();
    }                                                      

    private void btn_asıbtn_asıActionPerformed(java.awt.event.ActionEvent evt) {                                               

       yas(yıl,dogumyıl); 
        
    }                                              

    private void btn_guncelleActionPerformed(java.awt.event.ActionEvent evt) {                                             

        try {
            String idd=Integer.toString(h_id);
            int x= JOptionPane.showConfirmDialog(null, "Bilgilerinizi güncellemek istediğinizden emin misiniz?","Bilgileriniz güncellendi",JOptionPane.YES_NO_OPTION);

            if (x==0) {
                conn=db.connect_db();
                String sql=" UPDATE HASTA SET HASTA_AD=?, HASTA_SOYAD=?, TELEFON=?,TC = ?, HASTA_DOGUMTARIHI=?, E_MAIL=?,PAROLA = ? WHERE HASTA_ID=? ";
                pst=conn.prepareStatement(sql);
                pst.setString(1,txt_hb_ad.getText());
                pst.setString(2,txt_hb_soyad.getText());
                pst.setString(3,txt_hb_telefon.getText());
                pst.setString(4,txt_hb_tc.getText() );
                pst.setString(5,txt_hb_dogumtarihi.getText());
                pst.setString(6,txt_hb_email.getText());
                pst.setString(7, txt_sifre.getText());
                pst.setString(8,(String)idd);

                pst.execute();
                JOptionPane.showMessageDialog(null,"Bilgileriniz Güncellendi");
                //           kilitle();
            }
            else{
                JOptionPane.showMessageDialog(null,"Bilgileriniz Güncellenmemiştir");
                //                kilitle();
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        finally {
            try{
                conn.close();
            }
            catch (Exception ex) {

            }
        }

        txt_hb_ad.setEnabled(true);
        txt_hb_soyad.setEnabled(true);
        txt_hb_telefon.setEnabled(true);
        txt_hb_tc.setEnabled(true);
        txt_hb_dogumtarihi.setEnabled(true);
        txt_hb_email.setEnabled(true);
        txt_hb_cinsiyet.setEnabled(true);
    }                                            

    private void btn_silActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try{
            int x= JOptionPane.showConfirmDialog(null, "Hesabınızı silmek istediğinizden emin misiniz?","Hesabınız silindi",JOptionPane.YES_NO_OPTION);

            if (x==0) {

                String hasta=Integer.toString(h_id);
                conn=db.connect_db();
                String sql = "DELETE FROM HASTA WHERE HASTA_ID=?" ;
                pst = conn.prepareStatement(sql);
                pst.setString(1,hasta);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Hesabınız silinmiştir");
                new HRS().setVisible(true);
                this.hide();
            }
            else {
                JOptionPane.showMessageDialog(null, "Hesabınız silinmemiştir");
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex );
        }
        finally{
            try{
                conn.close();
            }
            catch (Exception ex) {

            }
        }

        txt_hb_ad.setEnabled(true);
        txt_hb_soyad.setEnabled(true);
        txt_hb_telefon.setEnabled(true);
        txt_hb_tc.setEnabled(true);
        txt_hb_dogumtarihi.setEnabled(true);
        txt_hb_email.setEnabled(true);
        txt_hb_cinsiyet.setEnabled(true);
    }                                       

    private void tbl_aktifrandevuMouseClicked(java.awt.event.MouseEvent evt) {                                              

        String data []=new String [aktifsutun];
        for (int i = 0; i <aktifsutun ; i++) {
            data [i]=tbl_aktifrandevu.getValueAt(tbl_aktifrandevu.getSelectedRow(),i ).toString();
        }
        randevu_id=data[0];
        hasta_il=data[1];
        hasta_ilce=data[2];
        hasta_hastane=data[3];
        hasta_poliklinik=data[4];
        hasta_tarih=data[5];
        hasta_doktorid=data[6];
        hasta_id=data[7];
        hasta_saat=data[8];
    }                                             

    private void btn_iptalActionPerformed(java.awt.event.ActionEvent evt) {                                          
        int x= JOptionPane.showConfirmDialog(null, "Randevunuzu iptal etmek istediğinizden emin misiniz?","Randevu Silindi",JOptionPane.YES_NO_OPTION);

        if(x==0){
            try{
                conn=db.connect_db();
                String sql = "INSERT INTO IPTAL_RANDEVU (IPTAL_IL,IPTAL_ILCE,IPTAL_HASTANE,IPTAL_POLIKLINIK,IPTAL_TARIH,Doktor_ID,Hasta_ID,IPTAL_SAAT) VALUES (?,?,?,?,?,?,?,?)" ;
                pst = conn.prepareStatement(sql);

                pst.setString(1, hasta_il);
                pst.setString(2, hasta_ilce);
                pst.setString(3, hasta_hastane);
                pst.setString(4, hasta_poliklinik);
                pst.setString(5, hasta_tarih);
                pst.setString(6, hasta_doktorid);
                pst.setString(7, hasta_id);
                pst.setString(8, hasta_saat);
                pst.execute();
                iptalrandevu();
            }
            catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex );
            }
            finally{
                try{
                    conn.close();
                }catch (Exception ex) {

                }
            }

            try{
                conn=db.connect_db();
                String sql = "DELETE FROM RANDEVU_ISLEM WHERE RANDEVU_ID=?" ;
                pst = conn.prepareStatement(sql);
                pst.setString(1, randevu_id);
                pst.execute();
                aktifrandevu();
                JOptionPane.showMessageDialog(null,"RANDEVUNUZ İPTAL EDİLMİŞTİR");
            }
            catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex );
            }
            finally{
                try{
                    conn.close();
                }
                catch (Exception ex) {

                }
            }
        }

        else {

        }
    }                                         

    private void tbl_iptalrandevuMouseClicked(java.awt.event.MouseEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void tbl_gecmisrandevuMouseClicked(java.awt.event.MouseEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void tbl_favorirandevuMouseClicked(java.awt.event.MouseEvent evt) {                                               

        favori_id =tbl_favorirandevu.getValueAt(tbl_favorirandevu.getSelectedRow(),0 ).toString();
    }                                              

    private void btn_favorikaldırActionPerformed(java.awt.event.ActionEvent evt) {                                                 

        
        try{

            conn = db.connect_db() ;
            String sql = " DELETE FROM FAVORI WHERE FAVORI_ID = ? " ;
            pst = conn.prepareStatement(sql);

            pst.setString(1, favori_id);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Favorilerden çıkartırıldı");
            favorirandevu();

        }catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }finally{
            try{
                conn.close();
            }catch (Exception ex) {

            }
        }
    }                                                

    private void btn_favorilerActionPerformed(java.awt.event.ActionEvent evt) {                                              

        tp.setSelectedIndex(2);
        favorirandevu();
        
        
    }                                             

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        tema(0,0,0,102,102,102);
        
        
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        tema(255,255,255,153,102,0);

    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        tema(0,102,102,153,0,0);

    }                                        

    private void tbl_aktifasıMouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void tbl_gecmisasıMouseClicked(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
    }                                          
String favori_id ; 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ana_Ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ana_Ekran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_ana;
    private javax.swing.JButton btn_ası;
    private javax.swing.JButton btn_cıkıs;
    private javax.swing.JButton btn_favorikaldır;
    private javax.swing.JButton btn_favoriler;
    private javax.swing.JButton btn_guncelle;
    private javax.swing.JButton btn_hesap;
    private javax.swing.JButton btn_iptal;
    private javax.swing.JButton btn_randevu;
    private javax.swing.JButton btn_randevuu;
    private javax.swing.JButton btn_sil;
    private javax.swing.JButton btn_tema;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable tbl_aktifası;
    private javax.swing.JTable tbl_aktifrandevu;
    private javax.swing.JTable tbl_favorirandevu;
    private javax.swing.JTable tbl_gecmisası;
    private javax.swing.JTable tbl_gecmisrandevu;
    private javax.swing.JTable tbl_iptalrandevu;
    private javax.swing.JTabbedPane tp;
    private javax.swing.JTextField txt_adsoyad;
    private javax.swing.JTextField txt_hb_ad;
    private javax.swing.JTextField txt_hb_cinsiyet;
    private javax.swing.JTextField txt_hb_dogumtarihi;
    private javax.swing.JTextField txt_hb_email;
    private javax.swing.JTextField txt_hb_soyad;
    private javax.swing.JTextField txt_hb_tc;
    private javax.swing.JTextField txt_hb_telefon;
    private javax.swing.JPasswordField txt_sifre;
    // End of variables declaration                   
}
